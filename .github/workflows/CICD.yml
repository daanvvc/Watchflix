name: CICD

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

jobs:
  build:
    name: Build, test and analyze spring boot services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ Gateway, MovieService, Eureka, MovieFileService ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Gradlew permission
        run: chmod +x ./${{ matrix.service }}/gradlew
      - name: Build ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: ./gradlew build
      - name: Unit test (with coverage) ${{ matrix.service }}
        working-directory: ./${{ matrix.service }}
        run: ./gradlew test jacocoTestReport
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/${{ matrix.service }}/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/${{ matrix.service }}/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Sonar scan ${{ matrix.service }}
        working-directory: ./${{ matrix.service }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar